extends /main
block content
  .pure-section.white
    .pure-container
      .pure-row.pure-padding--0px
        .pure-nav.pure-col.pure-col--2
          ul
            li
              a() Tutorial
            li
              a() Fundamentals
              ul
                li
                  a() Messages
                  ul
                    li: a() ajaxResponse
                    li: a() childAdded
                    li: a() childChanged
                    li: a() childRemoved
                    li: a() clicked
                    li: a() created
                    li: a() deleted
                    li: a() doubleClicked
                    li: a() heldDown
                    li: a() keydown
                    li: a() keyup
                    li: a() loop
                    li: a() modified
                    li: a() removed
                    li: a() onBinding
                    li: a() onBinding*
                    li: a() onScope
                    li: a() onScope*
                    li: a() tick
                    li: a() updated
                li: a() Components
                li: a() Scopes
            li: a() Techniques
        .pure-col.pure-col--10
          h2 Messages
          p.pure-block Messages are the primary focus of Horsepower, they are what make your components do what they do.
          h3 ajaxResponse
          .pure-block
            p Called when there is a response from an ajax request that was made by #[code this.ajax.get] or #[code this.ajax.post]
            pre: code.language-javascript.
              class example extends hp.element {
                created() {
                  this.ajax.get('/myfile.json')
                }
                ajaxResponse(data) {
                  console.log(data)
                }
              }

          h3 childAdded
          .pure-block
            p Called when a child element gets added. The child may or not be a direct child of the element.
            pre: code.language-javascript.
              class example extends hp.element {
                childAdded(element) {
                  if(!hp.hasComponents(element)){
                    hp.createComponent(element, otherComponent)
                  }
                }
              }

          h3 childChanged
          .pure-block
            p Called when a children elements gets added/removed.
            pre: code.language-javascript.
              class example extends hp.element {
                childChanged(element) {

                }
              }

          h3 childRemoved
          .pure-block
            p Called when a children elements get removed.
            pre: code.language-javascript.
              class example extends hp.element {
                childRemoved(element) {

                }
              }

          h3 clicked
          .pure-block
            p Called when the element is clicked.
            pre: code.language-javascript.
              class example extends hp.element {
                clicked() {
                  this.toggleClass('red-background')
                }
              }

          h3 created
          .pure-block
            p Called when the component gets created. This is only called once per component, and is a good place to initialize properties and/or scope values.
            pre: code.language-javascript.
              class example extends hp.element {
                created() {
                  this.number = Math.random()
                }
              }

          h3 deleted
          .pure-block
            p Called when the component gets deleted. This is only called once per component, and is a good place to cleanup anything that needs house keeping.
            pre: code.language-javascript.
              class example extends hp.element {
                deleted() {
                  this.rootScope.items = []
                }
              }

          h3 doubleClicked
          .pure-block
            p Called when the element was double clicked.
            pre: code.language-javascript.
              class example extends hp.element {
                doubleClicked() {
                  this.toggleClass('blue-background')
                }
              }
